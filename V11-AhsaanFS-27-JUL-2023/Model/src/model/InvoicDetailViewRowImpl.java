package model;

import java.math.BigDecimal;

import java.math.MathContext;
import java.math.RoundingMode;

import java.sql.Timestamp;

import oracle.jbo.ApplicationModule;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jan 04 00:48:27 PKT 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class InvoicDetailViewRowImpl extends ViewRowImpl {
    public static final int ENTITY_INVOICDETAIL = 0;
    public static final int ENTITY_PRODUCT = 1;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        InvoicDetailId,
        InvoiceHeadFk,
        ProductIdFk,
        Rate,
        Qty,
        Amount,
        ProductShortname,
        ProductId,
        InvoicHeadView,
        product_lubricantview1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int INVOICDETAILID = AttributesEnum.InvoicDetailId.index();
    public static final int INVOICEHEADFK = AttributesEnum.InvoiceHeadFk.index();
    public static final int PRODUCTIDFK = AttributesEnum.ProductIdFk.index();
    public static final int RATE = AttributesEnum.Rate.index();
    public static final int QTY = AttributesEnum.Qty.index();
    public static final int AMOUNT = AttributesEnum.Amount.index();
    public static final int PRODUCTSHORTNAME = AttributesEnum.ProductShortname.index();
    public static final int PRODUCTID = AttributesEnum.ProductId.index();
    public static final int INVOICHEADVIEW = AttributesEnum.InvoicHeadView.index();
    public static final int PRODUCT_LUBRICANTVIEW1 = AttributesEnum.product_lubricantview1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public InvoicDetailViewRowImpl() {
    }

    /**
     * Gets InvoicDetail entity object.
     * @return the InvoicDetail
     */
    public EntityImpl getInvoicDetail() {
        return (EntityImpl) getEntity(ENTITY_INVOICDETAIL);
    }

    /**
     * Gets Product entity object.
     * @return the Product
     */
    public EntityImpl getProduct() {
        return (EntityImpl) getEntity(ENTITY_PRODUCT);
    }

    /**
     * Gets the attribute value for INVOIC_DETAIL_ID using the alias name InvoicDetailId.
     * @return the INVOIC_DETAIL_ID
     */
    public DBSequence getInvoicDetailId() {
        return (DBSequence) getAttributeInternal(INVOICDETAILID);
    }

    /**
     * Sets <code>value</code> as attribute value for INVOIC_DETAIL_ID using the alias name InvoicDetailId.
     * @param value value to set the INVOIC_DETAIL_ID
     */
    public void setInvoicDetailId(DBSequence value) {
        setAttributeInternal(INVOICDETAILID, value);
    }

    /**
     * Gets the attribute value for INVOICE_HEAD_FK using the alias name InvoiceHeadFk.
     * @return the INVOICE_HEAD_FK
     */
    public Long getInvoiceHeadFk() {
        return (Long) getAttributeInternal(INVOICEHEADFK);
    }

    /**
     * Sets <code>value</code> as attribute value for INVOICE_HEAD_FK using the alias name InvoiceHeadFk.
     * @param value value to set the INVOICE_HEAD_FK
     */
    public void setInvoiceHeadFk(Long value) {
        setAttributeInternal(INVOICEHEADFK, value);
    }

    /**
     * Gets the attribute value for PRODUCT_ID_FK using the alias name ProductIdFk.
     * @return the PRODUCT_ID_FK
     */
    public Long getProductIdFk() {
        return (Long) getAttributeInternal(PRODUCTIDFK);
    }

    /**
     * Sets <code>value</code> as attribute value for PRODUCT_ID_FK using the alias name ProductIdFk.
     * @param value value to set the PRODUCT_ID_FK
     */
    public void setProductIdFk(Long value) {
        setAttributeInternal(PRODUCTIDFK, value);
        String rate=this.execRetailRateInvoic(value, getInvoiceHeadFk());
            setAttributeInternal(RATE, rate);
        this.calculateAmount();
    }

    /**
     * Gets the attribute value for RATE using the alias name Rate.
     * @return the RATE
     */
    public String getRate() {
        return (String) getAttributeInternal(RATE);
    }

    /**
     * Sets <code>value</code> as attribute value for RATE using the alias name Rate.
     * @param value value to set the RATE
     */
    public void setRate(String value) {
        
        setAttributeInternal(RATE, value);
       
    }

    /**
     * Gets the attribute value for QTY using the alias name Qty.
     * @return the QTY
     */
    public BigDecimal getQty() {
        return (BigDecimal) getAttributeInternal(QTY);
    }

    /**
     * Sets <code>value</code> as attribute value for QTY using the alias name Qty.
     * @param value value to set the QTY
     */
    public void setQty(BigDecimal value) {
        setAttributeInternal(QTY, value);
       
        String rate=this.execRetailRateInvoic(getProductIdFk(), getInvoiceHeadFk());
            setAttributeInternal(RATE, rate);
        this.calculateAmount();
        
      
    }

    /**
     * Gets the attribute value for AMOUNT using the alias name Amount.
     * @return the AMOUNT
     */
    public BigDecimal getAmount() {
        return (BigDecimal) getAttributeInternal(AMOUNT);
    }

    /**
     * Sets <code>value</code> as attribute value for AMOUNT using the alias name Amount.
     * @param value value to set the AMOUNT
     */
    public void setAmount(BigDecimal value) {
      
        setAttributeInternal(AMOUNT, value);
    }

    /**
     * Gets the attribute value for PRODUCT_SHORTNAME using the alias name ProductShortname.
     * @return the PRODUCT_SHORTNAME
     */
    public String getProductShortname() {
        return (String) getAttributeInternal(PRODUCTSHORTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for PRODUCT_SHORTNAME using the alias name ProductShortname.
     * @param value value to set the PRODUCT_SHORTNAME
     */
    public void setProductShortname(String value) {
        setAttributeInternal(PRODUCTSHORTNAME, value);
    }

    /**
     * Gets the attribute value for PRODUCT_ID using the alias name ProductId.
     * @return the PRODUCT_ID
     */
    public DBSequence getProductId() {
        return (DBSequence) getAttributeInternal(PRODUCTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PRODUCT_ID using the alias name ProductId.
     * @param value value to set the PRODUCT_ID
     */
    public void setProductId(DBSequence value) {
        setAttributeInternal(PRODUCTID, value);
    }

    /**
     * Gets the associated <code>ViewRowImpl</code> using master-detail link InvoicHeadView.
     */
    public ViewRowImpl getInvoicHeadView() {
        return (ViewRowImpl) getAttributeInternal(INVOICHEADVIEW);
    }

    /**
     * Sets the master-detail link InvoicHeadView between this object and <code>value</code>.
     */
    public void setInvoicHeadView(ViewRowImpl value) {
        setAttributeInternal(INVOICHEADVIEW, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> product_lubricantview1.
     */
    public RowSet getproduct_lubricantview1() {
        return (RowSet) getAttributeInternal(PRODUCT_LUBRICANTVIEW1);
    }
   
    
    
    
    public String execRetailRateInvoic(Long Value, long invoiceheadid) {
        String res ="" ;
        ApplicationModule applicationModule = getApplicationModule();
        System.out.println("PRODUCT  ="+Value);   
        System.out.println("invoiceheadid  ="+invoiceheadid);   
        if (applicationModule instanceof VOAPPImpl){
            VOAPPImpl am;
            am = (VOAPPImpl) applicationModule;
            res = am.execGetRetailRateInvoic(Value,invoiceheadid);
               
                      //pass values from current row to plsql func and get resut  
               }  
        return res;
        //return (String) getAttributeInternal(TNSSPELLAMOUNT);
    }
    
    
    
    public void calculateAmount(){
                     
                       
                       
                        MathContext mc 
                                   = new MathContext(8);
                        BigDecimal value;
                        
                        value = new BigDecimal(0.0, mc);
                       
                       
                        BigDecimal Rate=new BigDecimal(this.getRate(),mc);
                  
                      
                       
                          value=Rate.multiply(this.getQty(),mc);  
                        System.out.println("amount ="+value);      
                        
                            
                        value=value.setScale(7, RoundingMode.HALF_UP);
                        setAttributeInternal(AMOUNT, value);
                      
                       
                   
                    }
    
    
}

