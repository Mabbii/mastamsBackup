package model;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Mar 08 04:11:07 PKT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TankStockTransferViewRowImpl extends ViewRowImpl {
    public static final int ENTITY_TANKSTOCKTRANSFER = 0;
    public static final int ENTITY_PRODUCT = 1;
    public static final int ENTITY_OILTANKER = 2;
    public static final int ENTITY_OILTANKER1 = 3;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        TstId,
        TstDr,
        TstCr,
        TstQuentity,
        TstDate,
        TstInfo,
        ProductIdFk,
        ProductShortname,
        ProductId,
        OiltRegistration,
        OiltId,
        OiltRegistration1,
        OiltId1,
        Product_Fuel_only1,
        OilTankerWStorage1,
        OilTankerWStorage2;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int TSTID = AttributesEnum.TstId.index();
    public static final int TSTDR = AttributesEnum.TstDr.index();
    public static final int TSTCR = AttributesEnum.TstCr.index();
    public static final int TSTQUENTITY = AttributesEnum.TstQuentity.index();
    public static final int TSTDATE = AttributesEnum.TstDate.index();
    public static final int TSTINFO = AttributesEnum.TstInfo.index();
    public static final int PRODUCTIDFK = AttributesEnum.ProductIdFk.index();
    public static final int PRODUCTSHORTNAME = AttributesEnum.ProductShortname.index();
    public static final int PRODUCTID = AttributesEnum.ProductId.index();
    public static final int OILTREGISTRATION = AttributesEnum.OiltRegistration.index();
    public static final int OILTID = AttributesEnum.OiltId.index();
    public static final int OILTREGISTRATION1 = AttributesEnum.OiltRegistration1.index();
    public static final int OILTID1 = AttributesEnum.OiltId1.index();
    public static final int PRODUCT_FUEL_ONLY1 = AttributesEnum.Product_Fuel_only1.index();
    public static final int OILTANKERWSTORAGE1 = AttributesEnum.OilTankerWStorage1.index();
    public static final int OILTANKERWSTORAGE2 = AttributesEnum.OilTankerWStorage2.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TankStockTransferViewRowImpl() {
    }

    /**
     * Gets TankStockTransfer entity object.
     * @return the TankStockTransfer
     */
    public EntityImpl getTankStockTransfer() {
        return (EntityImpl) getEntity(ENTITY_TANKSTOCKTRANSFER);
    }

    /**
     * Gets Product entity object.
     * @return the Product
     */
    public EntityImpl getProduct() {
        return (EntityImpl) getEntity(ENTITY_PRODUCT);
    }

    /**
     * Gets OilTanker entity object.
     * @return the OilTanker
     */
    public EntityImpl getOilTanker() {
        return (EntityImpl) getEntity(ENTITY_OILTANKER);
    }

    /**
     * Gets OilTanker1 entity object.
     * @return the OilTanker1
     */
    public EntityImpl getOilTanker1() {
        return (EntityImpl) getEntity(ENTITY_OILTANKER1);
    }

    /**
     * Gets the attribute value for TST_ID using the alias name TstId.
     * @return the TST_ID
     */
    public DBSequence getTstId() {
        return (DBSequence) getAttributeInternal(TSTID);
    }

    /**
     * Sets <code>value</code> as attribute value for TST_ID using the alias name TstId.
     * @param value value to set the TST_ID
     */
    public void setTstId(DBSequence value) {
        setAttributeInternal(TSTID, value);
    }

    /**
     * Gets the attribute value for TST_DR using the alias name TstDr.
     * @return the TST_DR
     */
    public Long getTstDr() {
        return (Long) getAttributeInternal(TSTDR);
    }

    /**
     * Sets <code>value</code> as attribute value for TST_DR using the alias name TstDr.
     * @param value value to set the TST_DR
     */
    public void setTstDr(Long value) {
        setAttributeInternal(TSTDR, value);
    }

    /**
     * Gets the attribute value for TST_CR using the alias name TstCr.
     * @return the TST_CR
     */
    public Long getTstCr() {
        return (Long) getAttributeInternal(TSTCR);
    }

    /**
     * Sets <code>value</code> as attribute value for TST_CR using the alias name TstCr.
     * @param value value to set the TST_CR
     */
    public void setTstCr(Long value) {
        setAttributeInternal(TSTCR, value);
    }

    /**
     * Gets the attribute value for TST_QUENTITY using the alias name TstQuentity.
     * @return the TST_QUENTITY
     */
    public BigDecimal getTstQuentity() {
        return (BigDecimal) getAttributeInternal(TSTQUENTITY);
    }

    /**
     * Sets <code>value</code> as attribute value for TST_QUENTITY using the alias name TstQuentity.
     * @param value value to set the TST_QUENTITY
     */
    public void setTstQuentity(BigDecimal value) {
        setAttributeInternal(TSTQUENTITY, value);
    }

    /**
     * Gets the attribute value for TST_DATE using the alias name TstDate.
     * @return the TST_DATE
     */
    public Timestamp getTstDate() {
        return (Timestamp) getAttributeInternal(TSTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for TST_DATE using the alias name TstDate.
     * @param value value to set the TST_DATE
     */
    public void setTstDate(Timestamp value) {
        setAttributeInternal(TSTDATE, value);
    }

    /**
     * Gets the attribute value for TST_INFO using the alias name TstInfo.
     * @return the TST_INFO
     */
    public String getTstInfo() {
        return (String) getAttributeInternal(TSTINFO);
    }

    /**
     * Sets <code>value</code> as attribute value for TST_INFO using the alias name TstInfo.
     * @param value value to set the TST_INFO
     */
    public void setTstInfo(String value) {
        setAttributeInternal(TSTINFO, value);
    }

    /**
     * Gets the attribute value for PRODUCT_ID_FK using the alias name ProductIdFk.
     * @return the PRODUCT_ID_FK
     */
    public Long getProductIdFk() {
        return (Long) getAttributeInternal(PRODUCTIDFK);
    }

    /**
     * Sets <code>value</code> as attribute value for PRODUCT_ID_FK using the alias name ProductIdFk.
     * @param value value to set the PRODUCT_ID_FK
     */
    public void setProductIdFk(Long value) {
        setAttributeInternal(PRODUCTIDFK, value);
    }

    /**
     * Gets the attribute value for PRODUCT_SHORTNAME using the alias name ProductShortname.
     * @return the PRODUCT_SHORTNAME
     */
    public String getProductShortname() {
        return (String) getAttributeInternal(PRODUCTSHORTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for PRODUCT_SHORTNAME using the alias name ProductShortname.
     * @param value value to set the PRODUCT_SHORTNAME
     */
    public void setProductShortname(String value) {
        setAttributeInternal(PRODUCTSHORTNAME, value);
    }

    /**
     * Gets the attribute value for PRODUCT_ID using the alias name ProductId.
     * @return the PRODUCT_ID
     */
    public DBSequence getProductId() {
        return (DBSequence) getAttributeInternal(PRODUCTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PRODUCT_ID using the alias name ProductId.
     * @param value value to set the PRODUCT_ID
     */
    public void setProductId(DBSequence value) {
        setAttributeInternal(PRODUCTID, value);
    }

    /**
     * Gets the attribute value for OILT_REGISTRATION# using the alias name OiltRegistration.
     * @return the OILT_REGISTRATION#
     */
    public String getOiltRegistration() {
        return (String) getAttributeInternal(OILTREGISTRATION);
    }

    /**
     * Sets <code>value</code> as attribute value for OILT_REGISTRATION# using the alias name OiltRegistration.
     * @param value value to set the OILT_REGISTRATION#
     */
    public void setOiltRegistration(String value) {
        setAttributeInternal(OILTREGISTRATION, value);
    }

    /**
     * Gets the attribute value for OILT_ID using the alias name OiltId.
     * @return the OILT_ID
     */
    public DBSequence getOiltId() {
        return (DBSequence) getAttributeInternal(OILTID);
    }

    /**
     * Sets <code>value</code> as attribute value for OILT_ID using the alias name OiltId.
     * @param value value to set the OILT_ID
     */
    public void setOiltId(DBSequence value) {
        setAttributeInternal(OILTID, value);
    }

    /**
     * Gets the attribute value for OILT_REGISTRATION# using the alias name OiltRegistration1.
     * @return the OILT_REGISTRATION#
     */
    public String getOiltRegistration1() {
        return (String) getAttributeInternal(OILTREGISTRATION1);
    }

    /**
     * Sets <code>value</code> as attribute value for OILT_REGISTRATION# using the alias name OiltRegistration1.
     * @param value value to set the OILT_REGISTRATION#
     */
    public void setOiltRegistration1(String value) {
        setAttributeInternal(OILTREGISTRATION1, value);
    }

    /**
     * Gets the attribute value for OILT_ID using the alias name OiltId1.
     * @return the OILT_ID
     */
    public DBSequence getOiltId1() {
        return (DBSequence) getAttributeInternal(OILTID1);
    }

    /**
     * Sets <code>value</code> as attribute value for OILT_ID using the alias name OiltId1.
     * @param value value to set the OILT_ID
     */
    public void setOiltId1(DBSequence value) {
        setAttributeInternal(OILTID1, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Product_Fuel_only1.
     */
    public RowSet getProduct_Fuel_only1() {
        RowSet rs1 = (RowSet)getAttributeInternal(PRODUCT_FUEL_ONLY1);
                 rs1.executeQuery();
                 return rs1;
      //  return (RowSet) getAttributeInternal(PRODUCT_FUEL_ONLY1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> OilTankerWStorage1.
     */
    public RowSet getOilTankerWStorage1() {
        RowSet rs1 = (RowSet)getAttributeInternal(OILTANKERWSTORAGE1);
                 rs1.executeQuery();
                 return rs1;
       // return (RowSet) getAttributeInternal(OILTANKERWSTORAGE1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> OilTankerWStorage2.
     */
    public RowSet getOilTankerWStorage2() {
        RowSet rs1 = (RowSet)getAttributeInternal(OILTANKERWSTORAGE2);
                 rs1.executeQuery();
                 return rs1;
      //  return (RowSet) getAttributeInternal(OILTANKERWSTORAGE2);
    }
}

