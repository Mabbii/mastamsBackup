package model;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Feb 23 15:57:00 PKT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MrInputViewRowImpl extends ViewRowImpl {


    public static final int ENTITY_MRINPUT = 0;
    public static final int ENTITY_NOZAL = 1;
    public static final int ENTITY_DATECOUNTER = 2;
    public static final int ENTITY_METERREADINGS = 3;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        DcIdFk,
        MriData,
        MriId,
        NozalIdFk,
        MriDate,
        NozalName,
        NozalId,
        MriMTest,
        DcStartDate,
        DcId,
        MeterRId,
        MeterRReadings,
        MeterRDate,
        MeterRPrevious,
        MeterRCurrent,
        MeterRSale,
        DcIdFk1,
        MriIdFk,
        MeterRNTest,
        NozalIdFk1,
        ProductIdFk,
        MeterReadingsView,
        NozalView1;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DCIDFK = AttributesEnum.DcIdFk.index();
    public static final int MRIDATA = AttributesEnum.MriData.index();
    public static final int MRIID = AttributesEnum.MriId.index();
    public static final int NOZALIDFK = AttributesEnum.NozalIdFk.index();
    public static final int MRIDATE = AttributesEnum.MriDate.index();
    public static final int NOZALNAME = AttributesEnum.NozalName.index();
    public static final int NOZALID = AttributesEnum.NozalId.index();
    public static final int MRIMTEST = AttributesEnum.MriMTest.index();
    public static final int DCSTARTDATE = AttributesEnum.DcStartDate.index();
    public static final int DCID = AttributesEnum.DcId.index();
    public static final int METERRID = AttributesEnum.MeterRId.index();
    public static final int METERRREADINGS = AttributesEnum.MeterRReadings.index();
    public static final int METERRDATE = AttributesEnum.MeterRDate.index();
    public static final int METERRPREVIOUS = AttributesEnum.MeterRPrevious.index();
    public static final int METERRCURRENT = AttributesEnum.MeterRCurrent.index();
    public static final int METERRSALE = AttributesEnum.MeterRSale.index();
    public static final int DCIDFK1 = AttributesEnum.DcIdFk1.index();
    public static final int MRIIDFK = AttributesEnum.MriIdFk.index();
    public static final int METERRNTEST = AttributesEnum.MeterRNTest.index();
    public static final int NOZALIDFK1 = AttributesEnum.NozalIdFk1.index();
    public static final int PRODUCTIDFK = AttributesEnum.ProductIdFk.index();
    public static final int METERREADINGSVIEW = AttributesEnum.MeterReadingsView.index();
    public static final int NOZALVIEW1 = AttributesEnum.NozalView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MrInputViewRowImpl() {
    }

    /**
     * Gets MrInput entity object.
     * @return the MrInput
     */
    public EntityImpl getMrInput() {
        return (EntityImpl) getEntity(ENTITY_MRINPUT);
    }

    /**
     * Gets Nozal entity object.
     * @return the Nozal
     */
    public EntityImpl getNozal() {
        return (EntityImpl) getEntity(ENTITY_NOZAL);
    }

    /**
     * Gets DateCounter entity object.
     * @return the DateCounter
     */
    public EntityImpl getDateCounter() {
        return (EntityImpl) getEntity(ENTITY_DATECOUNTER);
    }

    /**
     * Gets MeterReadings entity object.
     * @return the MeterReadings
     */
    public EntityImpl getMeterReadings() {
        return (EntityImpl) getEntity(ENTITY_METERREADINGS);
    }


    /**
     * Gets the attribute value for DC_ID_FK using the alias name DcIdFk.
     * @return the DC_ID_FK
     */
    public Long getDcIdFk() {
        return (Long) getAttributeInternal(DCIDFK);
    }

    /**
     * Sets <code>value</code> as attribute value for DC_ID_FK using the alias name DcIdFk.
     * @param value value to set the DC_ID_FK
     */
    public void setDcIdFk(Long value) {
        setAttributeInternal(DCIDFK, value);
    }

    /**
     * Gets the attribute value for MRI_DATA using the alias name MriData.
     * @return the MRI_DATA
     */
    public BigDecimal getMriData() {
        return (BigDecimal) getAttributeInternal(MRIDATA);
    }

    /**
     * Sets <code>value</code> as attribute value for MRI_DATA using the alias name MriData.
     * @param value value to set the MRI_DATA
     */
    public void setMriData(BigDecimal value) {
    
        setAttributeInternal(MRIDATA, value);
        
        
    }

    /**
     * Gets the attribute value for MRI_ID using the alias name MriId.
     * @return the MRI_ID
     */
    public DBSequence getMriId() {
        return (DBSequence) getAttributeInternal(MRIID);
    }

    /**
     * Sets <code>value</code> as attribute value for MRI_ID using the alias name MriId.
     * @param value value to set the MRI_ID
     */
    public void setMriId(DBSequence value) {
        setAttributeInternal(MRIID, value);
    }

    /**
     * Gets the attribute value for NOZAL_ID_FK using the alias name NozalIdFk.
     * @return the NOZAL_ID_FK
     */
    public Long getNozalIdFk() {
        return (Long) getAttributeInternal(NOZALIDFK);
    }

    /**
     * Sets <code>value</code> as attribute value for NOZAL_ID_FK using the alias name NozalIdFk.
     * @param value value to set the NOZAL_ID_FK
     */
    public void setNozalIdFk(Long value) {
        setAttributeInternal(NOZALIDFK, value);
    }

    /**
     * Gets the attribute value for MRI_DATE using the alias name MriDate.
     * @return the MRI_DATE
     */
    public Timestamp getMriDate() {
        return (Timestamp) getAttributeInternal(MRIDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for MRI_DATE using the alias name MriDate.
     * @param value value to set the MRI_DATE
     */
    public void setMriDate(Timestamp value) {
        setAttributeInternal(MRIDATE, value);
    }

    /**
     * Gets the attribute value for NOZAL_NAME using the alias name NozalName.
     * @return the NOZAL_NAME
     */
    public String getNozalName() {
        return (String) getAttributeInternal(NOZALNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for NOZAL_NAME using the alias name NozalName.
     * @param value value to set the NOZAL_NAME
     */
    public void setNozalName(String value) {
        setAttributeInternal(NOZALNAME, value);
    }

    /**
     * Gets the attribute value for NOZAL_ID using the alias name NozalId.
     * @return the NOZAL_ID
     */
    public DBSequence getNozalId() {
        return (DBSequence) getAttributeInternal(NOZALID);
    }

    /**
     * Sets <code>value</code> as attribute value for NOZAL_ID using the alias name NozalId.
     * @param value value to set the NOZAL_ID
     */
    public void setNozalId(DBSequence value) {
        setAttributeInternal(NOZALID, value);
    }

    /**
     * Gets the attribute value for MRI_M_TEST using the alias name MriMTest.
     * @return the MRI_M_TEST
     */
    public BigDecimal getMriMTest() {
        return (BigDecimal) getAttributeInternal(MRIMTEST);
    }

    /**
     * Sets <code>value</code> as attribute value for MRI_M_TEST using the alias name MriMTest.
     * @param value value to set the MRI_M_TEST
     */
    public void setMriMTest(BigDecimal value) {
        setAttributeInternal(MRIMTEST, value);
    }

    /**
     * Gets the attribute value for DC_START_DATE using the alias name DcStartDate.
     * @return the DC_START_DATE
     */
    public Timestamp getDcStartDate() {
        return (Timestamp) getAttributeInternal(DCSTARTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for DC_START_DATE using the alias name DcStartDate.
     * @param value value to set the DC_START_DATE
     */
    public void setDcStartDate(Timestamp value) {
        setAttributeInternal(DCSTARTDATE, value);
    }

    /**
     * Gets the attribute value for DC_ID using the alias name DcId.
     * @return the DC_ID
     */
    public DBSequence getDcId() {
        return (DBSequence) getAttributeInternal(DCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DC_ID using the alias name DcId.
     * @param value value to set the DC_ID
     */
    public void setDcId(DBSequence value) {
        setAttributeInternal(DCID, value);
    }

    /**
     * Gets the attribute value for METER_R_ID using the alias name MeterRId.
     * @return the METER_R_ID
     */
    public DBSequence getMeterRId() {
        return (DBSequence) getAttributeInternal(METERRID);
    }

    /**
     * Sets <code>value</code> as attribute value for METER_R_ID using the alias name MeterRId.
     * @param value value to set the METER_R_ID
     */
    public void setMeterRId(DBSequence value) {
        setAttributeInternal(METERRID, value);
    }

    /**
     * Gets the attribute value for METER_R_READINGS using the alias name MeterRReadings.
     * @return the METER_R_READINGS
     */
    public BigDecimal getMeterRReadings() {
        return (BigDecimal) getAttributeInternal(METERRREADINGS);
    }

    /**
     * Sets <code>value</code> as attribute value for METER_R_READINGS using the alias name MeterRReadings.
     * @param value value to set the METER_R_READINGS
     */
    public void setMeterRReadings(BigDecimal value) {
        setAttributeInternal(METERRREADINGS, value);
    }

    /**
     * Gets the attribute value for METER_R_DATE using the alias name MeterRDate.
     * @return the METER_R_DATE
     */
    public Timestamp getMeterRDate() {
        return (Timestamp) getAttributeInternal(METERRDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for METER_R_DATE using the alias name MeterRDate.
     * @param value value to set the METER_R_DATE
     */
    public void setMeterRDate(Timestamp value) {
        setAttributeInternal(METERRDATE, value);
    }

    /**
     * Gets the attribute value for METER_R_PREVIOUS using the alias name MeterRPrevious.
     * @return the METER_R_PREVIOUS
     */
    public BigDecimal getMeterRPrevious() {
        return (BigDecimal) getAttributeInternal(METERRPREVIOUS);
    }

    /**
     * Sets <code>value</code> as attribute value for METER_R_PREVIOUS using the alias name MeterRPrevious.
     * @param value value to set the METER_R_PREVIOUS
     */
    public void setMeterRPrevious(BigDecimal value) {
        setAttributeInternal(METERRPREVIOUS, value);
    }

    /**
     * Gets the attribute value for METER_R_CURRENT using the alias name MeterRCurrent.
     * @return the METER_R_CURRENT
     */
    public BigDecimal getMeterRCurrent() {
        return (BigDecimal) getAttributeInternal(METERRCURRENT);
    }

    /**
     * Sets <code>value</code> as attribute value for METER_R_CURRENT using the alias name MeterRCurrent.
     * @param value value to set the METER_R_CURRENT
     */
    public void setMeterRCurrent(BigDecimal value) {
        setAttributeInternal(METERRCURRENT, value);
    }

    /**
     * Gets the attribute value for METER_R_SALE using the alias name MeterRSale.
     * @return the METER_R_SALE
     */
    public BigDecimal getMeterRSale() {
        return (BigDecimal) getAttributeInternal(METERRSALE);
    }

    /**
     * Sets <code>value</code> as attribute value for METER_R_SALE using the alias name MeterRSale.
     * @param value value to set the METER_R_SALE
     */
    public void setMeterRSale(BigDecimal value) {
        setAttributeInternal(METERRSALE, value);
    }

    /**
     * Gets the attribute value for DC_ID_FK using the alias name DcIdFk1.
     * @return the DC_ID_FK
     */
    public Long getDcIdFk1() {
        return (Long) getAttributeInternal(DCIDFK1);
    }

    /**
     * Sets <code>value</code> as attribute value for DC_ID_FK using the alias name DcIdFk1.
     * @param value value to set the DC_ID_FK
     */
    public void setDcIdFk1(Long value) {
        setAttributeInternal(DCIDFK1, value);
    }

    /**
     * Gets the attribute value for MRI_ID_FK using the alias name MriIdFk.
     * @return the MRI_ID_FK
     */
    public Long getMriIdFk() {
        return (Long) getAttributeInternal(MRIIDFK);
    }

    /**
     * Sets <code>value</code> as attribute value for MRI_ID_FK using the alias name MriIdFk.
     * @param value value to set the MRI_ID_FK
     */
    public void setMriIdFk(Long value) {
        setAttributeInternal(MRIIDFK, value);
    }

    /**
     * Gets the attribute value for METER_R_N_TEST using the alias name MeterRNTest.
     * @return the METER_R_N_TEST
     */
    public BigDecimal getMeterRNTest() {
        return (BigDecimal) getAttributeInternal(METERRNTEST);
    }

    /**
     * Sets <code>value</code> as attribute value for METER_R_N_TEST using the alias name MeterRNTest.
     * @param value value to set the METER_R_N_TEST
     */
    public void setMeterRNTest(BigDecimal value) {
        setAttributeInternal(METERRNTEST, value);
    }

    /**
     * Gets the attribute value for NOZAL_ID_FK using the alias name NozalIdFk1.
     * @return the NOZAL_ID_FK
     */
    public Long getNozalIdFk1() {
        return (Long) getAttributeInternal(NOZALIDFK1);
    }

    /**
     * Sets <code>value</code> as attribute value for NOZAL_ID_FK using the alias name NozalIdFk1.
     * @param value value to set the NOZAL_ID_FK
     */
    public void setNozalIdFk1(Long value) {
        setAttributeInternal(NOZALIDFK1, value);
    }

    /**
     * Gets the attribute value for PRODUCT_ID_FK using the alias name ProductIdFk.
     * @return the PRODUCT_ID_FK
     */
    public Long getProductIdFk() {
        return (Long) getAttributeInternal(PRODUCTIDFK);
    }

    /**
     * Sets <code>value</code> as attribute value for PRODUCT_ID_FK using the alias name ProductIdFk.
     * @param value value to set the PRODUCT_ID_FK
     */
    public void setProductIdFk(Long value) {
        setAttributeInternal(PRODUCTIDFK, value);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MeterReadingsView.
     */
    public RowIterator getMeterReadingsView() {
        return (RowIterator) getAttributeInternal(METERREADINGSVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> NozalView1.
     */
    public RowSet getNozalView1() {
        return (RowSet) getAttributeInternal(NOZALVIEW1);
    }
}

