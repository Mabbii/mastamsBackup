package model;

import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import java.sql.CallableStatement;
import java.sql.SQLException;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.DBTransactionImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Jan 27 15:33:18 PKT 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TransactionLogImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        TnsLogId,
        TnsId,
        TnsDate,
        TnsAmount,
        TnsDetail,
        TnsInfo,
        TnsGroup,
        TnsTnsTypeIdFk,
        TnsRate,
        TnsQty,
        TnsOiltId,
        TnsOildId,
        TnsStId,
        TnsCoaDactNumber,
        TnsCoaCactNumber,
        TnsAdjDate,
        TnsTnsviewId,
        TnsBankTnsTypeIdFk,
        TnsSlipNo,
        TnsSlipDate,
        TnsEtc,
        TnsPurchaseRateLogIdFk,
        TnsNewrate,
        TnsFreightfactor,
        TnsSaleRateLogIdFk,
        TnsIsDebit,
        TnsParentTnsId,
        TnsIsClaimedId,
        TnsReverseEntry,
        TnsAdjId,
        TnsSDate,
        TnsBankNameId,
        TnsBrCode,
        TnsOildLoadId,
        TnsOildLoadDate,
        TnsAdjAcRef,
        TnsInfoStart,
        TnsLogDate,
        TnsLogOpeF,
        TnsLogOldNew,
        LUserOperation,
        ChartOfAccounts,
        ChartOfAccounts1,
        BankName,
        BankTnsType,
        OilDepo,
        OilDepo1,
        OilTanker,
        TransactionType,
        InfoDmlOpe1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TNSLOGID = AttributesEnum.TnsLogId.index();
    public static final int TNSID = AttributesEnum.TnsId.index();
    public static final int TNSDATE = AttributesEnum.TnsDate.index();
    public static final int TNSAMOUNT = AttributesEnum.TnsAmount.index();
    public static final int TNSDETAIL = AttributesEnum.TnsDetail.index();
    public static final int TNSINFO = AttributesEnum.TnsInfo.index();
    public static final int TNSGROUP = AttributesEnum.TnsGroup.index();
    public static final int TNSTNSTYPEIDFK = AttributesEnum.TnsTnsTypeIdFk.index();
    public static final int TNSRATE = AttributesEnum.TnsRate.index();
    public static final int TNSQTY = AttributesEnum.TnsQty.index();
    public static final int TNSOILTID = AttributesEnum.TnsOiltId.index();
    public static final int TNSOILDID = AttributesEnum.TnsOildId.index();
    public static final int TNSSTID = AttributesEnum.TnsStId.index();
    public static final int TNSCOADACTNUMBER = AttributesEnum.TnsCoaDactNumber.index();
    public static final int TNSCOACACTNUMBER = AttributesEnum.TnsCoaCactNumber.index();
    public static final int TNSADJDATE = AttributesEnum.TnsAdjDate.index();
    public static final int TNSTNSVIEWID = AttributesEnum.TnsTnsviewId.index();
    public static final int TNSBANKTNSTYPEIDFK = AttributesEnum.TnsBankTnsTypeIdFk.index();
    public static final int TNSSLIPNO = AttributesEnum.TnsSlipNo.index();
    public static final int TNSSLIPDATE = AttributesEnum.TnsSlipDate.index();
    public static final int TNSETC = AttributesEnum.TnsEtc.index();
    public static final int TNSPURCHASERATELOGIDFK = AttributesEnum.TnsPurchaseRateLogIdFk.index();
    public static final int TNSNEWRATE = AttributesEnum.TnsNewrate.index();
    public static final int TNSFREIGHTFACTOR = AttributesEnum.TnsFreightfactor.index();
    public static final int TNSSALERATELOGIDFK = AttributesEnum.TnsSaleRateLogIdFk.index();
    public static final int TNSISDEBIT = AttributesEnum.TnsIsDebit.index();
    public static final int TNSPARENTTNSID = AttributesEnum.TnsParentTnsId.index();
    public static final int TNSISCLAIMEDID = AttributesEnum.TnsIsClaimedId.index();
    public static final int TNSREVERSEENTRY = AttributesEnum.TnsReverseEntry.index();
    public static final int TNSADJID = AttributesEnum.TnsAdjId.index();
    public static final int TNSSDATE = AttributesEnum.TnsSDate.index();
    public static final int TNSBANKNAMEID = AttributesEnum.TnsBankNameId.index();
    public static final int TNSBRCODE = AttributesEnum.TnsBrCode.index();
    public static final int TNSOILDLOADID = AttributesEnum.TnsOildLoadId.index();
    public static final int TNSOILDLOADDATE = AttributesEnum.TnsOildLoadDate.index();
    public static final int TNSADJACREF = AttributesEnum.TnsAdjAcRef.index();
    public static final int TNSINFOSTART = AttributesEnum.TnsInfoStart.index();
    public static final int TNSLOGDATE = AttributesEnum.TnsLogDate.index();
    public static final int TNSLOGOPEF = AttributesEnum.TnsLogOpeF.index();
    public static final int TNSLOGOLDNEW = AttributesEnum.TnsLogOldNew.index();
    public static final int LUSEROPERATION = AttributesEnum.LUserOperation.index();
    public static final int CHARTOFACCOUNTS = AttributesEnum.ChartOfAccounts.index();
    public static final int CHARTOFACCOUNTS1 = AttributesEnum.ChartOfAccounts1.index();
    public static final int BANKNAME = AttributesEnum.BankName.index();
    public static final int BANKTNSTYPE = AttributesEnum.BankTnsType.index();
    public static final int OILDEPO = AttributesEnum.OilDepo.index();
    public static final int OILDEPO1 = AttributesEnum.OilDepo1.index();
    public static final int OILTANKER = AttributesEnum.OilTanker.index();
    public static final int TRANSACTIONTYPE = AttributesEnum.TransactionType.index();
    public static final int INFODMLOPE1 = AttributesEnum.InfoDmlOpe1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TransactionLogImpl() {
    }

    /**
     * @param tnsLogId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence tnsLogId) {
        return new Key(new Object[] { tnsLogId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.TransactionLog");
    }


}

